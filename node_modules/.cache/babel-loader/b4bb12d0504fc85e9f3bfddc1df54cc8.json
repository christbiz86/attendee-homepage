{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport function login(email, password) {\n  return dispatch => {\n    // dispatch(setLoginPending(true));\n    // dispatch(setLoginSuccess(false));\n    // dispatch(setLoginError(null));\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(email, password, callback) {\n  fetch(\"http://149.129.213.242:8080/attendee/signin\", {\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json()).then(response => {\n    if (!response.error) {\n      localStorage.setItem('token', response.accessToken);\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid email and password'));\n    }\n  }).catch(error => alert(\"gagal\" + error));\n}\n\nexport default function reducer(state = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aria/My-Folder/xampp/htdocs/attendee-homepage/src/redux/reducer.js"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","login","email","password","dispatch","callLoginApi","error","setLoginPending","setLoginSuccess","setLoginError","isLoginPending","type","isLoginSuccess","loginError","callback","fetch","method","body","JSON","stringify","headers","then","res","json","response","localStorage","setItem","accessToken","Error","catch","alert","reducer","state","action","Object","assign"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAOC,QAAQ,IAAI;AACjB;AACA;AACA;AAEAC,IAAAA,YAAY,CAACH,KAAD,EAAQC,QAAR,EAAkBG,KAAK,IAAI;AACrCF,MAAAA,QAAQ,CAACG,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACD,KAAL,EAAY;AACVF,QAAAA,QAAQ,CAACI,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACK,aAAa,CAACH,KAAD,CAAd,CAAR;AACD;AACF,KAPW,CAAZ;AAQD,GAbD;AAcD;;AAED,SAASC,eAAT,CAAyBG,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEb,iBADD;AAELY,IAAAA;AAFK,GAAP;AAID;;AAED,SAASF,eAAT,CAAyBI,cAAzB,EAAyC;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEZ,iBADD;AAELa,IAAAA;AAFK,GAAP;AAID;;AAED,SAASH,aAAT,CAAuBI,UAAvB,EAAmC;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEX,eADD;AAELa,IAAAA;AAFK,GAAP;AAID;;AAED,SAASR,YAAT,CAAsBH,KAAtB,EAA6BC,QAA7B,EAAuCW,QAAvC,EAAiD;AAC7CC,EAAAA,KAAK,CAAC,6CAAD,EAAgD;AAC7CC,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjB,MAAAA,KAAK,EAAEA,KADU;AAEjBC,MAAAA,QAAQ,EAAEA;AAFO,KAAf,CAFuC;AAM7CiB,IAAAA,OAAO,EAAC;AAAE,sBAAgB;AAAlB;AANqC,GAAhD,CAAL,CAQKC,IARL,CAQUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARjB,EAQ6BF,IAR7B,CAQmCG,QAAD,IAAY;AACtC,QAAI,CAACA,QAAQ,CAAClB,KAAd,EAAqB;AACjBmB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,QAAQ,CAACG,WAAtC;AACA,aAAOb,QAAQ,CAAC,IAAD,CAAf;AACD,KAHH,MAGS;AACL,aAAOA,QAAQ,CAAC,IAAIc,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD;AACN,GAfL,EAgBKC,KAhBL,CAgBWvB,KAAK,IAAIwB,KAAK,CAAC,UAAUxB,KAAX,CAhBzB;AAiBC;;AAEL,eAAe,SAASyB,OAAT,CAAiBC,KAAK,GAAG;AACtCpB,EAAAA,cAAc,EAAE,KADsB;AAEtCF,EAAAA,cAAc,EAAE,KAFsB;AAGtCG,EAAAA,UAAU,EAAE;AAH0B,CAAzB,EAIZoB,MAJY,EAIJ;AACT,UAAQA,MAAM,CAACtB,IAAf;AACE,SAAKb,iBAAL;AACE,aAAOoC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BtB,QAAAA,cAAc,EAAEuB,MAAM,CAACvB;AADO,OAAzB,CAAP;;AAIF,SAAKX,iBAAL;AACE,aAAOmC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BpB,QAAAA,cAAc,EAAEqB,MAAM,CAACrB;AADO,OAAzB,CAAP;;AAIF,SAAKZ,eAAL;AACE,aAAOkC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BnB,QAAAA,UAAU,EAAEoB,MAAM,CAACpB;AADW,OAAzB,CAAP;;AAIF;AACE,aAAOmB,KAAP;AAjBJ;AAmBD","sourcesContent":["const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nexport function login(email, password) {\n  return dispatch => {\n    // dispatch(setLoginPending(true));\n    // dispatch(setLoginSuccess(false));\n    // dispatch(setLoginError(null));\n\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction callLoginApi(email, password, callback) {\n    fetch(\"http://149.129.213.242:8080/attendee/signin\", {\n            method: 'POST',\n            body: JSON.stringify({\n                email: email,\n                password: password\n            }),\n            headers:{ 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json()).then((response)=>{\n            if (!response.error) {\n                localStorage.setItem('token',response.accessToken);\n                return callback(null);\n              } else {\n                return callback(new Error('Invalid email and password'));\n              }\n        })\n        .catch(error => alert(\"gagal\" + error))\n    }\n\nexport default function reducer(state = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}